import javax.swing.JTextField;

/**
 *
 * @author krishshah
 */
public class SellDiamondGUI extends javax.swing.JFrame {

	public SellDiamondGUI() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jComboBox1 = new javax.swing.JComboBox<>();
		jLabel2 = new javax.swing.JLabel();
		jTextField1 = new javax.swing.JTextField();
		jLabel3 = new javax.swing.JLabel();
		jTextField2 = new javax.swing.JTextField();
		jLabel4 = new javax.swing.JLabel();
		jTextField3 = new javax.swing.JTextField();
		jLabel5 = new javax.swing.JLabel();
		jTextField4 = new javax.swing.JTextField();
		jScrollPane2 = new javax.swing.JScrollPane();
		jTextArea2 = new javax.swing.JTextArea();
		jLabel6 = new javax.swing.JLabel();
		jTextField5 = new javax.swing.JTextField();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jLabel7 = new javax.swing.JLabel();
		jComboBox2 = new javax.swing.JComboBox<>();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		jLabel1.setText("Type");

		jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Round", "Taper", "Baguette" }));
		jComboBox1.setSelectedIndex(1);
		jComboBox1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jComboBox1ActionPerformed(evt);
			}
		});

		jLabel2.setText("Enter Item Code");

		jLabel3.setText("Enter Client Code");

		jLabel4.setText("Enter Payback Date");

		jTextField3.setText("dd/mm/yyyy");

		jLabel5.setText("Enter Selling Price");

		jTextArea2.setEditable(false);
		jTextArea2.setColumns(20);
		jTextArea2.setRows(5);
		jScrollPane2.setViewportView(jTextArea2);

		jLabel6.setText("Enter Pieces");

		jButton1.setText("Sell");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jButton2.setText("Clear");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jLabel7.setText("Markup (%)");

		jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(
				new String[] { "Custom", "5", "10", "15", "20", "30", "40", "50" }));
		jComboBox2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jComboBox2ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(34, 34, 34)
						.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 333,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				.addGroup(layout.createSequentialGroup().addGap(98, 98, 98)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jLabel1).addComponent(jLabel2).addComponent(jLabel3).addComponent(jLabel4)
								.addComponent(jLabel5)
								.addGroup(layout.createSequentialGroup().addGap(1, 1, 1).addComponent(jButton1))
								.addComponent(jLabel7).addComponent(jLabel6))
						.addGap(16, 16, 16)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup().addComponent(jButton2)
										.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.LEADING, 0,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(jTextField5, javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(jTextField4, javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING,
														javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
												.addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING))
										.addGap(64, 64, 64)))));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGap(28, 28, 28)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel1).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel2))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel3).addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel4).addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel5))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel7))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jLabel6).addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jButton1).addComponent(jButton2))
						.addGap(18, 18, 18)
						.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(38, 38, 38)));

		pack();
	}// </editor-fold>

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		jTextArea2.setText("");
		String selectedType = jComboBox1.getSelectedItem().toString();
		JTextField[] textFields = { jTextField1, jTextField3, jTextField4, jTextField2 };
		boolean flag = Inventory.checkInputs(textFields);
		if (flag == false) {
			jTextArea2.append("Please enter all fields.");
			return;
		}
		int itemCode = 0;
		double unpaid = 0;
		String codeDebt = jTextField2.getText();
		String date = jTextField3.getText();
		try {
			itemCode = Integer.parseInt(jTextField1.getText());
		} catch (NumberFormatException e) {
			jTextArea2.append("Invalid item code. Please enter an integer. \n");
			return; // handles error to make sure itemcode is an integer
		}
		try {
			unpaid = Double.parseDouble(jTextField4.getText());
		} catch (NumberFormatException e) {
			jTextArea2.append("Invalid unpaid amount. Please enter a number. \n");
			return; // handles error to make sure unpaid is double
		}
		if (selectedType.equals("Round")) {
			Round.sold(itemCode, unpaid, codeDebt, date, jTextArea2);
			return;
		} else if (selectedType.equals("Taper")) {
			int pieces = 0; // pieces is specific to the sold method of tapers/baguettes
			try { // as they are sold in batches
				pieces = Integer.parseInt(jTextField5.getText());
			} catch (NumberFormatException e) {
				jTextArea2.append("Invalid number of pieces. Please enter an integer. \n");
				return; // handles error to make sure pieces is an integer
			}
			Taper.sold(itemCode, unpaid, codeDebt, date, pieces, jTextArea2);
			return;
		} else if (selectedType.equals("Baguette")) {
			int pieces = 0;
			try {
				pieces = Integer.parseInt(jTextField5.getText());
			} catch (NumberFormatException e) {
				jTextArea2.append("Invalid number of pieces. Please enter an integer. \n");
				return;
			}
			Baguette.sold(itemCode, unpaid, codeDebt, date, pieces, jTextArea2);
			return;
		}
	}

	private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {
		if (jComboBox1.getSelectedItem().toString().equals("Round")) {
			jLabel6.setVisible(false);
			jTextField5.setVisible(false);
		} else if (jComboBox1.getSelectedItem().toString().equals("Taper")) {
			jLabel6.setVisible(true);
			jTextField5.setVisible(true);
		} else if (jComboBox1.getSelectedItem().toString().equals("Baguette")) {
			jLabel6.setVisible(true);
			jTextField5.setVisible(true);
		}
	}

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		jTextField1.setText("");
		jTextField2.setText("");
		jTextField3.setText("dd/mm/yyyy");
		jTextField4.setText("");
		jTextField5.setText("");
	}

	private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) { // Markup Option
		jTextArea2.setText("");
		String selectedType = jComboBox1.getSelectedItem().toString();
		JTextField[] textFields = { jTextField1 };
		boolean flag = Inventory.checkInputs(textFields);
		if (flag == false) {
			jTextArea2.append("Please enter an item code.");
			return;
		}
		double unpaid = 0.0; // unpaid = selling price
		int pieces = 0;
		double price = 0.0;
		double piecePrice = 0.0;
		int itemCode = Integer.parseInt(jTextField1.getText());
		if (jComboBox2.getSelectedItem().toString().equals("Custom")) { // allows user to set their own prices if they
																		// want
			jTextField4.setEditable(true); // allows price to be entered
		} else {
			jTextField4.setEditable(false); // prevents editing to textField
			String number = jComboBox2.getSelectedItem().toString();
			double markup = ((Double.parseDouble(number)) / 100) + 1; // converts markup to a multiplier
			if (selectedType.equals("Round")) {
				Round round = Round.find(itemCode); // searches for the diamond based on input
				if (round == null) {
					jTextArea2.append("Diamond not found!"); // handles error if diamond not found
					return;
				}
				unpaid = round.getPrice() * markup; // calculates new price from the diamond price
				jTextField4.setText(Double.toString(Inventory.round(unpaid))); // cast Double --> String
			} else if (selectedType.equals("Taper")) {
				Taper taper = Taper.find(itemCode);
				if (taper == null) {
					jTextArea2.append("Diamond not found!");
					return;
				}
				String textField5Value = jTextField4.getText();
				if (textField5Value.isEmpty()) {
					jTextArea2.append("Please enter a value for pieces"); // handles error: pieces input needed
					return;
				}
				pieces = Integer.parseInt(jTextField5.getText());
				piecePrice = taper.getPrice() / taper.getPieces(); // calculate the markup based on pieces sold from
																	// stock
				unpaid = (piecePrice * pieces) * markup;
				jTextField4.setText(Double.toString(Inventory.round(unpaid))); 
			} else if (selectedType.equals("Baguette")) {
				Baguette baguette = Baguette.find(itemCode);
				if (baguette == null) {
					jTextArea2.append("Diamond not found!");
					return;
				}
				String textField5Value = jTextField4.getText();
				if (textField5Value.isEmpty()) {
					jTextArea2.append("Please enter a value for pieces");
					return;
				}
				pieces = Integer.parseInt(jTextField5.getText());
				piecePrice = baguette.getPrice() / baguette.getPieces();
				unpaid = (piecePrice * pieces) * markup;
				jTextField4.setText(Double.toString(Inventory.round(unpaid)));
			}
		}
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(SellDiamondGUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(SellDiamondGUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(SellDiamondGUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(SellDiamondGUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new SellDiamondGUI().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JComboBox<String> jComboBox1;
	private javax.swing.JComboBox<String> jComboBox2;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JTextArea jTextArea2;
	private javax.swing.JTextField jTextField1;
	private javax.swing.JTextField jTextField2;
	private javax.swing.JTextField jTextField3;
	private javax.swing.JTextField jTextField4;
	private javax.swing.JTextField jTextField5;
	// End of variables declaration
}
